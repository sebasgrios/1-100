---
import Modal from "./Modal.astro";
---

<div
	class="h-svh flex flex-col items-center justify-evenly gap-2 lg:gap-4 max-w-3xl mx-auto lg:px-6 py-2 lg:py-4"
	id="container"
>
	<div class="w-full flex flex-row items-center justify-evenly">
		<div class="text-5xl select-none" id="countdown">00:00</div>
		<div
			class="hidden text-5xl select-none flex flex-row items-center justify-center gap-4"
			id="score-container"
		>
			<svg
				class="size-10"
				xmlns="http://www.w3.org/2000/svg"
				viewBox="0 0 24 24"
				fill="none"
				><path
					d="M12 15a6 6 0 0 1-6-6V3.444c0-.413 0-.62.06-.786a1 1 0 0 1 .598-.598C6.824 2 7.031 2 7.444 2h9.112c.413 0 .62 0 .786.06a1 1 0 0 1 .598.598c.06.166.06.373.06.786V9a6 6 0 0 1-6 6zm0 0v3m6-14h2.5c.466 0 .699 0 .883.076a1 1 0 0 1 .54.541c.077.184.077.417.077.883V6c0 .93 0 1.395-.102 1.776a3 3 0 0 1-2.122 2.122C19.395 10 18.93 10 18 10M6 4H3.5c-.466 0-.699 0-.883.076a1 1 0 0 0-.54.541C2 4.801 2 5.034 2 5.5V6c0 .93 0 1.395.102 1.776a3 3 0 0 0 2.122 2.122C4.605 10 5.07 10 6 10m1.444 12h9.112a.444.444 0 0 0 .444-.444A3.556 3.556 0 0 0 13.444 18h-2.888A3.556 3.556 0 0 0 7 21.556c0 .245.199.444.444.444z"
					stroke="#000"
					stroke-width="2"
					stroke-linecap="round"
					stroke-linejoin="round"></path></svg
			>
			<div class="text-5xl select-none" id="score">0</div>
		</div>
	</div>
	<table class="flex-1 w-full" id="table"></table>
	<button
		class="w-1/2 text-2xl cursor-pointer rounded-xl border px-8 py-2 bg-white hover:bg-gray-200 select-none"
		id="reset-button"
	>
		Reset
	</button>

	<Modal />
</div>

<script>
	const generateRandomNumbers = (maximum_counter: number) => {
		const numbers = Array.from({ length: maximum_counter }, (_, i) => i + 1);

		for (let i = numbers.length - 1; i > 0; i--) {
			const j = Math.floor(Math.random() * (i + 1));
			[numbers[i], numbers[j]] = [numbers[j], numbers[i]];
		}

		return numbers;
	};

	document.addEventListener("DOMContentLoaded", () => {
		const countdownElement = document.getElementById("countdown");
		const scoreContainerElement = document.getElementById("score-container");
		const scoreElement = document.getElementById("score");
		const table = document.getElementById("table");
		const resetButton = document.getElementById("reset-button");
		const modalElement = document.getElementById("modal");
		const titleModal = document.getElementById("title-modal");
		const scoreModal = document.getElementById("score-modal");
		const descriptionModal = document.getElementById("tile-description");
		const closeModal = document.getElementById("title-close");

		let countdown = 300; // 5 minutes in seconds
		let maximum_counter = 100; // 10x10 table
		let interval = 0;
		let timer = countdown - 1;
		let counter = 1;
		let fail = false;
		let index = 0;

		if (countdownElement === null) {
			console.error("Countdown element not found");
			return;
		}
		if (scoreContainerElement === null || scoreElement === null) {
			console.error("Score element not found");
			return;
		}
		if (table === null) {
			console.error("Table element not found");
			return;
		}
		if (resetButton === null) {
			console.error("Reset button not found");
			return;
		}
		if (
			modalElement === null ||
			titleModal === null ||
			scoreModal === null ||
			descriptionModal === null ||
			closeModal === null
		) {
			console.error("Modal element not found");
			return;
		}

		const getCountdown = (
			minutes: number = Math.floor(countdown / 60),
			seconds: number = countdown % 60,
		) => {
			return `${String(minutes).padStart(2, "0")}:${String(seconds).padStart(2, "0")}`;
		};

		const startTimer = () => {
			timer = countdown - 1;

			interval = setInterval(() => {
				const minutes = Math.floor(timer / 60);
				const seconds = timer % 60;

				countdownElement.textContent = getCountdown(minutes, seconds);

				if (--timer < 0) {
					countdownElement.classList.add("text-red-500", "font-bold");
					fail = true;
					clearInterval(interval);
					alertLostGame();
				}
			}, 1000);
		};

		const resetTimer = () => {
			clearInterval(interval);
			countdownElement.classList.remove("text-red-500", "font-bold");
			countdownElement.textContent = getCountdown();
			timer = countdown - 1;
		};

		const generateTable = () => {
			for (let i = 0; i < Math.sqrt(maximum_counter); i++) {
				const row = document.createElement("tr");

				for (let j = 0; j < Math.sqrt(maximum_counter); j++) {
					const cell = document.createElement("td");
					const number = randomNumbers[index++];

					cell.classList.add(
						"border",
						"cursor-pointer",
						"text-center",
						"font-bold",
						"bg-white",
						"hover:bg-gray-200",
						"w-1/10",
						"text-lg",
						"lg:text-xl",
						"select-none",
					);

					cell.addEventListener("click", () => {
						if (fail) {
							return;
						}

						cell.classList.remove("bg-white", "hover:bg-gray-200");

						if (number < counter) {
							return;
						}

						if (number === counter) {
							if (counter === 1) {
								startTimer();
							}
							if (counter === maximum_counter) {
								clearInterval(interval);
								alertWinGame();
							}

							cell.classList.add("bg-green-500", "hover:bg-green-500");
							counter++;
						} else {
							countdownElement.classList.add("text-red-500", "font-bold");
							cell.classList.add("bg-red-500", "hover:bg-red-500");
							fail = true;
							clearInterval(interval);
							alertLostGame();
						}
					});

					cell.textContent = `${number}`;
					row.appendChild(cell);
				}

				table.appendChild(row);
			}
		};

		const resetTable = () => {
			table.innerHTML = "";
			counter = 1;
			fail = false;
			index = 0;
		};

		const alertWinGame = () => {
			titleModal.classList.add("text-green-500");
			titleModal.textContent = "¡Has ganado!";
			scoreModal.innerHTML = `<span class="text-green-500">${counter}</span> / ${maximum_counter}`;
			descriptionModal.innerHTML = `Has ganado con un tiempo de: <br /> <span class="font-bold">${getCountdown(Math.floor((timer + 1) / 60), (timer + 1) % 60)}</span>`;
			modalElement.classList.remove("hidden");

			if (parseInt(localStorage.getItem("score") || "0") < counter) {
				localStorage.setItem("score", `${counter}`);
			}
		};

		const alertLostGame = () => {
			titleModal.classList.remove("text-green-500");
			titleModal.textContent = "Tu puntuación";
			scoreModal.innerHTML = `<span class="text-red-500">${counter - 1}</span> / ${maximum_counter}`;
			if (timer + 1 === 0) {
				descriptionModal.innerHTML = `Se te agotó el tiempo.`;
			} else {
				descriptionModal.innerHTML = `Has terminado con un tiempo de: <br /> <span class="font-bold">${getCountdown(Math.floor((timer + 1) / 60), (timer + 1) % 60)}</span>`;
			}
			modalElement.classList.remove("hidden");

			if (parseInt(localStorage.getItem("score") || "0") < counter - 1) {
				localStorage.setItem("score", `${counter - 1}`);
			}
		};

		const checkScore = () => {
			if (parseInt(localStorage.getItem("score") || "0") > 0) {
				console.log("si");

				scoreContainerElement.classList.remove("hidden");
				scoreElement.innerText = `${parseInt(localStorage.getItem("score") || "0")}`;
			}
		};

		countdownElement.textContent = getCountdown();
		let randomNumbers = generateRandomNumbers(maximum_counter);
		generateTable();
		checkScore();

		resetButton.addEventListener("click", () => {
			randomNumbers = generateRandomNumbers(maximum_counter);

			resetTable();
			generateTable();
			resetTimer();
		});

		modalElement.addEventListener("click", (event) => {
			if (event.target === modalElement) {
				scoreModal.classList.remove("hidden");
				modalElement.classList.add("hidden");

				checkScore();
			}
		});

		closeModal.addEventListener("click", () => {
			scoreModal.classList.remove("hidden");
			modalElement.classList.add("hidden");

			checkScore();
		});

		document.addEventListener("keydown", (event) => {
			if (event.ctrlKey && event.key === "f") {
				event.preventDefault();

				titleModal.classList.add("text-red-500");
				titleModal.classList.remove("text-green-500");
				titleModal.textContent = "¿Qué intentas hacer?";
				scoreModal.classList.add("hidden");
				descriptionModal.innerHTML = `Las trampas <span class="font-bold">NO</span> están permitidas en este juego.`;
				modalElement.classList.remove("hidden");
			}
		});
	});
</script>
